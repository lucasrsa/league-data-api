swagger: "2.0"
info:
  description: "Spring Boot API for League of Legends data."
  version: "0.0.2-SNAPSHOT"
  title: "League Data API"
host: "localhost:8080"
basePath: "/api/v2"
tags:
  - name: "Metadata"
    description: "League competitive information on teams, competitions and more"
  - name: "Statistics"
    description: ""
  - name: "Analytics"
    description: ""
schemes:
  - "http"
paths:
  /tournament:
    post:
      tags:
        - "Metadata"
      summary: "Add or update a tournament to the database"
      description: ""
      operationId: "updateTournament"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "Tournament to be added or updated"
          required: true
          schema:
            $ref: "#/definitions/TournamentDTO"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TournamentDTO"
        "405":
          description: "Invalid input"
    get:
      tags:
        - "Metadata"
      summary: "Find tournament by id or tag"
      description: "At least one of the parameters is required."
      operationId: "findTournamentByIdOrTag"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "The tournament id"
          required: false
          type: "integer"
          format: "int64"
        - name: "tag"
          in: "query"
          description: "The tournament tag"
          required: false
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TournamentDTO"
        "400":
          description: "Invalid status value"
  /tournament/all:
    get:
      tags:
        - "Metadata"
      summary: "List all tournament"
      operationId: "findAllTournaments"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TournamentDTO"
  /team:
    post:
      tags:
        - "Metadata"
      summary: "Add or update a team to the database"
      description: ""
      operationId: "updateTeam"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "body"
          in: "body"
          description: "Team to be added or updated"
          required: true
          schema:
            $ref: "#/definitions/TeamDTO"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TeamDTO"
        "405":
          description: "Invalid input"
    get:
      tags:
        - "Metadata"
      summary: "Finds team by id or tag"
      description: "At least one of the parameters is required."
      operationId: "findTeamByIdOrTag"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "The team id"
          required: false
          type: "integer"
          format: "int64"
        - name: "tag"
          in: "query"
          description: "The team tag"
          required: false
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/TeamDTO"
        "400":
          description: "Invalid status value"
  /team/tournament:
    get:
      tags:
        - "Metadata"
      summary: "Find team by tournament id or tag"
      description: "At least one of the parameters is required."
      operationId: "findTeamByTournament"
      produces:
        - "application/json"
      parameters:
        - name: "id"
          in: "query"
          description: "The tournament id"
          required: false
          type: "integer"
          format: "int64"
        - name: "tag"
          in: "query"
          description: "The tournament tag"
          required: false
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TeamDTO"
        "400":
          description: "Invalid status value"
  /team/all:
    get:
      tags:
        - "Metadata"
      summary: "List all teams"
      operationId: "findAllTeams"
      produces:
        - "application/json"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TeamDTO"
definitions:
  TournamentDTO:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      tag:
        type: "string"
      name:
        type: "string"
      region:
        type: "string"
      teams:
        type: "array"
        items:
          type: "string"
  TeamDTO:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      tag:
        type: "string"
      name:
        type: "string"
      tournament:
        type: "string"
